<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AIAssistantCustomInstructionsStorage">
    <option name="instructions">
      <map>
        <entry key="AIAssistant.VCS.GenerateCommitMessage">
          <value>
            <AIAssistantStoredInstruction>
              <option name="actionId" value="AIAssistant.VCS.GenerateCommitMessage" />
              <option name="content" value="Use the following format:&#10;Changes:&#10;- change 1&#10;- change 2&#10;- etc" />
            </AIAssistantStoredInstruction>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="845b5479-6549-45a5-ad2c-daf27b9a9a64" name="Changes" comment="Changes:  &#10;- Add `pt` function in `ExtUtils` to serialize `Component` into plaintext.  &#10;- Update `SignModule` to check for MiniMessage tags in `SignChangeEvent` using new `pt` function.  &#10;- Introduce `containsMiniMessageTags` helper method in `SignModule`.  &#10;&#10;Signed-off-by: illyrius666 &lt;fitimq@live.nl&gt;" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CompilerWorkspaceConfiguration">
    <option name="MAKE_PROJECT_ON_SAVE" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="VanillaPlus" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="VanillaPlus" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="VanillaPlus" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="application" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FormatOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="dev" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="SHOW_TAGS" value="false" />
    <option name="SIGN_OFF_COMMIT" value="true" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;illyrius666&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/XodiumSoftware/VanillaPlus.git&quot;,
    &quot;accountId&quot;: &quot;ef630309-ec8e-4fa5-a91a-abae44bdcf49&quot;
  }
}</component>
  <component name="MaliciousPackageCheckinHandlerState">
    <option name="packageCheck" value="true" />
  </component>
  <component name="OptimizeOnSaveOptions">
    <option name="myRunOnSave" value="true" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2zooeODQr7ZwbYRcRFzQlINHnwN" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Gradle.VanillaPlus [runDevServer].executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "code.cleanup.on.save": "true",
    "git-widget-placeholder": "fix/SignModule",
    "last_opened_file_path": "/media/hdd/JetBrains/Projects/VanillaPlus/.server/plugins",
    "rearrange.code.on.save": "true",
    "settings.editor.selected.configurable": "project.propVCSSupport.CommitDialog"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.server/plugins" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.server/plugins" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="VanillaPlus [runDevServer]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="runDevServer" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="VanillaPlus" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.VanillaPlus [runDevServer]" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.26927.53" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="845b5479-6549-45a5-ad2c-daf27b9a9a64" name="Changes" comment="" />
      <created>1752406880898</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1752406880898</updated>
      <workItem from="1752406882065" duration="4540000" />
      <workItem from="1752411455011" duration="265000" />
      <workItem from="1752411734137" duration="288000" />
    </task>
    <task id="LOCAL-00001" summary="auto generate .server if not exists">
      <option name="closed" value="true" />
      <created>1752408167745</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1752408167745</updated>
    </task>
    <task id="LOCAL-00002" summary="Changes:  &#10;- Add `pt` function in `ExtUtils` to serialize `Component` into plaintext.  &#10;- Update `SignModule` to check for MiniMessage tags in `SignChangeEvent` using new `pt` function.  &#10;- Introduce `containsMiniMessageTags` helper method in `SignModule`.  &#10;&#10;Signed-off-by: illyrius666 &lt;fitimq@live.nl&gt;">
      <option name="closed" value="true" />
      <created>1752411923443</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1752411923443</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="UpdateCopyrightCheckinHandler">
    <option name="UPDATE_COPYRIGHT" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="auto generate .server if not exists" />
    <MESSAGE value="refactor SignModule to check for MiniMessage tags and add plaintext utility function" />
    <MESSAGE value="parse SignModule lines with MiniMessage placeholders only" />
    <MESSAGE value="Changes:  &#10;- Add `pt` function in `ExtUtils` to serialize `Component` into plaintext.  &#10;- Update `SignModule` to check for MiniMessage tags in `SignChangeEvent` using new `pt` function.  &#10;- Introduce `containsMiniMessageTags` helper method in `SignModule`.  &#10;&#10;Signed-off-by: illyrius666 &lt;fitimq@live.nl&gt;" />
    <option name="LAST_COMMIT_MESSAGE" value="Changes:  &#10;- Add `pt` function in `ExtUtils` to serialize `Component` into plaintext.  &#10;- Update `SignModule` to check for MiniMessage tags in `SignChangeEvent` using new `pt` function.  &#10;- Introduce `containsMiniMessageTags` helper method in `SignModule`.  &#10;&#10;Signed-off-by: illyrius666 &lt;fitimq@live.nl&gt;" />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="REARRANGE_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
</project>